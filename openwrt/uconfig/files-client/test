#!/usr/bin/env ucode

'use strict';

import * as unetmsg from 'unetmsg.client';
import * as libubus from 'ubus';
import * as uloop from 'uloop';

import * as fs from 'fs';

function generate_config() {
	let active = fs.readfile('/etc/uconfig/configs/uconfig.active');
	active = json(active);
	let config = {
		unit: {
			timezone: active.unit.timezone,
			'leds-active' : active.unit['leds-active'],
		},

		main: {
			ssids: active.interfaces.main.ssids,
		},

		guest: {
			disable: active.interfaces.guest.disable || false,
			ssids: active.interfaces.guest.ssids,
		}
	};

	return config;
}

let chan;

uloop.init();
let ubus = libubus.connect();

chan = unetmsg.open(ubus);
chan.publish('uconfig', (req) => {});

chan.request('uconfig', 'info', {}, (msg) => {
	warn(`Got reply: ${msg}\n`);
});

let validate = {
	ok: true
};
chan.request('uconfig', 'config-store', generate_config(), (msg) => {
	warn(`Got reply: ${msg}\n`);
	validate[msg.host] = msg.validate;
	validate.ok &&= msg.validate;
});
printf('%.J\n', validate);
chan.request('uconfig', 'config-apply', generate_config(), (msg) => {
	warn(`Got reply: ${msg}\n`);
});
uloop.run();
